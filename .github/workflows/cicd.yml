name: CodeSphere API CI/CD

on:
  pull_request:
    branches: ["*"]

  workflow_dispatch:
    inputs:
      run_tests:
        description: "Run tests?"
        required: true
        default: "true"
        type: boolean
      deploy_preprod:
        description: "Deploy to preprod?"
        required: true
        default: "false"
        type: boolean

  push:
    branches:
      - main

jobs:
  build-test:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      
      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: docker build -t ghcr.io/${{ github.repository_owner }}/chatwithai:${{ github.sha }} ./ChatWithAI

      - name: Push Docker image
        run: docker push ghcr.io/${{ github.repository_owner }}/chatwithai:${{ github.sha }}

  deploy:
    needs: build-test
    runs-on: self-hosted
    strategy:
      matrix:
        include:
          - env: preprod
            service: codesphere-preprod
          - env: prod
            service: codesphere
    if: github.event_name != 'pull_request'
    steps:
      - name: Deploy
        if: (github.event_name == 'workflow_dispatch' && matrix.env == 'preprod' && github.event.inputs.deploy_preprod == 'true') ||
            (github.event_name == 'push' && matrix.env == 'prod')
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: deploy
          key: ${{ secrets.VPS_SSH_KEY }}
          source: "publish/*"
          target: /var/www/${{ matrix.service }}

      - name: Restart service
        if: (github.event_name == 'workflow_dispatch' && matrix.env == 'preprod' && github.event.inputs.deploy_preprod == 'true') ||
            (github.event_name == 'push' && matrix.env == 'prod')
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: deploy
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            sudo systemctl restart ${{ matrix.service }}
